on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      _R_CHECK_CRAN_INCOMING_: true
      _R_CHECK_FORCE_SUGGESTS_: true
      _R_CHECK_PACKAGE_DEPENDS_IGNORE_MISSING_SUGGESTS_: false
      _R_CHECK_SUGGESTS_ONLY_: true
      _R_CHECK_NO_RECOMMENDED_: true
      _R_CHECK_TIMINGS_: 10
      _R_CHECK_CRAN_STATUS_SUMMARY_: true
      _R_CHECK_EXAMPLE_TIMING_THRESHOLD_: 1
      _R_CHECK_TESTS_NLINES_: 0
      _R_CHECK_VIGNETTES_NLINES_: 0
      _R_CHECK_DOC_SIZES2_: true
      R_BUILD_ARGS: "--compact-vignettes=gs+qpdf"
      R_CHECK_ARGS: "--as-cran --timings"

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-tinytex@v2
        env:
          TINYTEX_INSTALLER: TinyTeX

      - name: Install LaTeX packages
        run: |
          tlmgr install ae parskip listings xcolor booktabs amsmath hyperref url
          tlmgr path add
          tlmgr update --self --all
        shell: bash

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            local::.
            any::rcmdcheck
            any::knitr
            any::rmarkdown
            any::devtools
            any::qpdf
          needs: check

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install DVC
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install 'dvc[all]'

      - name: Check DVC installation
        if: runner.os != 'Windows'
        run: |
          dvc --version
          which dvc

      - name: Prepare vignettes
        run: |
          mkdir -p inst/doc
          mkdir -p doc
          mkdir -p Meta
          touch inst/doc/.gitkeep
          touch doc/.gitkeep
          Rscript -e 'devtools::build_vignettes()'
        shell: bash

      - uses: r-lib/actions/check-r-package@v2
        with:
          error-on: '"error"'
          check-dir: '"check"'
          build-args: '"--compact-vignettes=gs+qpdf"'
          args: '"--as-cran --timings"' 