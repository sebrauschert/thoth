# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      RSPM: ${{ matrix.config.rspm }}
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_FORCE_SUGGESTS_: false
      # Ignore future timestamp checks
      _R_CHECK_SYSTEM_CLOCK_: false
      # Ignore temp directory checks
      _R_CHECK_CRAN_INCOMING_EMPTY_: false
      # Custom environment variables for thoth package
      R_BUILD_ARGS: "--compact-vignettes=gs+qpdf"
      R_CHECK_ARGS: "--as-cran --timings"

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/setup-tinytex@v2
        env:
          TINYTEX_INSTALLER: TinyTeX

      - name: Install LaTeX packages (Unix)
        if: runner.os != 'Windows'
        run: |
          # Make sure tlmgr is in the PATH
          export PATH=$PATH:$(find $HOME -type d -path "*/bin" -name "tlmgr" | head -n 1 | xargs dirname)
          # Check if tlmgr is available
          which tlmgr || echo "tlmgr not found in PATH: $PATH"
          # Install required LaTeX packages
          tlmgr install ae parskip listings xcolor booktabs amsmath hyperref url || echo "Failed to install LaTeX packages, continuing anyway"
          tlmgr path add || echo "Failed to add tlmgr to path, continuing anyway"
          tlmgr update --self --all || echo "Failed to update tlmgr, continuing anyway"
        shell: bash

      - name: Install LaTeX packages (Windows)
        if: runner.os == 'Windows'
        run: |
          # Make sure tlmgr is in the PATH
          $env:PATH = "$env:APPDATA\TinyTeX\bin\win32;$env:PATH"
          # Check if tlmgr is available
          try { tlmgr --version } catch { Write-Host "tlmgr not found in PATH: $env:PATH" }
          # Install required LaTeX packages
          tlmgr install ae parskip listings xcolor booktabs amsmath hyperref url || Write-Host "Failed to install LaTeX packages, continuing anyway"
          tlmgr path add || Write-Host "Failed to add tlmgr to path, continuing anyway"
          tlmgr update --self --all || Write-Host "Failed to update tlmgr, continuing anyway"
        shell: pwsh

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install DVC
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install 'dvc[all]'

      - name: Check DVC installation
        if: runner.os != 'Windows'
        run: |
          dvc --version
          which dvc

      - name: Prepare vignettes (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p inst/doc
          mkdir -p doc
          mkdir -p Meta
          touch inst/doc/.gitkeep
          touch doc/.gitkeep
          Rscript -e 'devtools::build_vignettes()'
        shell: bash

      - name: Prepare vignettes (Windows)
        if: runner.os == 'Windows'
        run: |
          # Create necessary directories
          New-Item -ItemType Directory -Force -Path inst/doc
          New-Item -ItemType Directory -Force -Path doc
          New-Item -ItemType Directory -Force -Path Meta
          # Create placeholder files
          New-Item -ItemType File -Force -Path inst/doc/.gitkeep
          New-Item -ItemType File -Force -Path doc/.gitkeep
          # Build vignettes
          Rscript -e 'devtools::build_vignettes()'
        shell: pwsh

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true 