[{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to toth","title":"Contributing to toth","text":"outlines propose change toth. detailed info contributing , e.g. tidyverse packages, please see development contributing guide.","code":""},{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to toth","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to toth","text":"making significant changes, please make sure : R (>= 4.1.0) DVC Docker Quarto","code":""},{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to toth","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to toth","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"sebrauschert/toth\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to toth","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://sebrauschert.github.io/toth/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to toth","text":"Please note toth project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Custom Templates","text":"Quarto templates help maintain consistent branding styling across organization’s reports. toth provides tools create manage custom Quarto templates organization’s branding, colors, styling preferences.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"basic-template-creation","dir":"Articles","previous_headings":"","what":"Basic Template Creation","title":"Custom Templates","text":"Create new template organization’s branding:","code":"library(toth)  create_quarto_template(   template_name = \"company_template\",   primary_color = \"#0054AD\",   secondary_color = \"#00B4E0\",   logo_path = \"path/to/logo.png\",   font_family = \"Arial\" )"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"css-customization","dir":"Articles","previous_headings":"Template Components","what":"CSS Customization","title":"Custom Templates","text":"template generates custom CSS file branding:","code":"/* Custom styles for Quarto template */ :root {   --primary-color: #0054AD;   --secondary-color: #00B4E0; }  .navbar {   background-color: var(--primary-color); }  .title {   color: var(--primary-color); }  a {   color: var(--secondary-color); }  body {   font-family: Arial; }"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"yaml-configuration","dir":"Articles","previous_headings":"Template Components","what":"YAML Configuration","title":"Custom Templates","text":"template includes YAML configuration:","code":"format:   html:     theme: cosmo     css: custom.css     toc: true     code-fold: true     code-tools: true     df-print: paged     fig-width: 8     fig-height: 6     fig-format: png     fig-dpi: 300"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"applying-templates","dir":"Articles","previous_headings":"","what":"Applying Templates","title":"Custom Templates","text":"Apply template Quarto document:","code":"apply_template_to_report(\"reports/analysis.qmd\", \"company_template\")"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"custom-fonts","dir":"Articles","previous_headings":"Advanced Customization","what":"Custom Fonts","title":"Custom Templates","text":"Use web fonts template: Add font link template:","code":"create_quarto_template(   template_name = \"modern_template\",   font_family = \"'Source Sans Pro', sans-serif\",   primary_color = \"#2E5EAA\" ) format:   html:     css: custom.css     include-in-header:       text: |         <link href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600&display=swap\" rel=\"stylesheet\">"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"custom-layouts","dir":"Articles","previous_headings":"Advanced Customization","what":"Custom Layouts","title":"Custom Templates","text":"Create custom layouts CSS Grid:","code":".custom-layout {   display: grid;   grid-template-columns: 1fr 2fr;   gap: 2rem; }  .sidebar {   background: var(--primary-color);   padding: 1rem;   color: white; }  .main-content {   padding: 1rem; }"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"interactive-elements","dir":"Articles","previous_headings":"Advanced Customization","what":"Interactive Elements","title":"Custom Templates","text":"Add custom JavaScript interactivity: Include template:","code":"// custom.js document.addEventListener('DOMContentLoaded', function() {   // Add custom behaviors }); format:   html:     include-after-body:       file: custom.js"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Custom Templates","text":"Use consistent color palette Ensure sufficient contrast Consider color blindness accessibility Choose readable fonts Maintain consistent hierarchy Use appropriate font sizes Keep layouts clean consistent Use white space effectively Make navigation intuitive Test different screen sizes Use flexible layouts Optimize images","code":""},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"template-organization","dir":"Articles","previous_headings":"","what":"Template Organization","title":"Custom Templates","text":"Recommended structure template files:","code":"reports/ └── templates/     └── company_template/         ├── _template.yml         ├── custom.css         ├── custom.js         └── assets/             └── logo.png"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"executive-summary-template","dir":"Articles","previous_headings":"Example Templates","what":"Executive Summary Template","title":"Custom Templates","text":"","code":"# _template.yml format:   html:     theme: cosmo     css: custom.css     toc: false     code-fold: true     code-tools: false     fig-width: 10     fig-height: 6     fig-format: png     fig-dpi: 300     include-in-header:       file: header.html"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"technical-report-template","dir":"Articles","previous_headings":"Example Templates","what":"Technical Report Template","title":"Custom Templates","text":"","code":"# _template.yml format:   html:     theme: cosmo     css: custom.css     toc: true     toc-depth: 3     code-fold: show     code-tools: true     df-print: paged     fig-width: 8     fig-height: 6     fig-format: png     fig-dpi: 300     include-in-header:       file: header.html"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"integration-with-r-markdown","dir":"Articles","previous_headings":"","what":"Integration with R Markdown","title":"Custom Templates","text":"Quarto preferred format, templates can adapted R Markdown:","code":"output:   html_document:     theme: cosmo     css: templates/company_template/custom.css     toc: true     code_folding: hide"},{"path":"https://sebrauschert.github.io/toth/articles/custom-templates.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Custom Templates","text":"Create templates different report types Add custom JavaScript functionality Implement accessibility features Share templates across organization","code":""},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tracking Human Decisions in Analysis","text":"One challenges bioinformatics data analysis documenting tracking human decisions made analysis process. code data can version controlled, reasoning behind key analytical decisions often remains undocumented. toth package provides functionality track decisions structured way.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Tracking Human Decisions in Analysis","text":"install package GitHub, first ensure required dependencies:","code":"# Install required dependencies if not already installed required_packages <- c(\"usethis\", \"yaml\", \"cli\", \"digest\", \"rmarkdown\", \"tools\") for (pkg in required_packages) {   if (!requireNamespace(pkg, quietly = TRUE)) {     install.packages(pkg)   } }  # Install toth from GitHub if (!requireNamespace(\"devtools\", quietly = TRUE)) {   install.packages(\"devtools\") } devtools::install_github(\"sebrauschert/toth\")"},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Tracking Human Decisions in Analysis","text":"First, let’s load package:","code":"library(toth)"},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"creating-a-decision-tree","dir":"Articles","previous_headings":"","what":"Creating a Decision Tree","title":"Tracking Human Decisions in Analysis","text":"starting new analysis, initialize decision tree track decisions:","code":"decision_file <- initialize_decision_tree(   analysis_id = \"RNA_seq_2024_01\",   analyst = \"Jane Smith\",   description = \"Differential expression analysis of treatment vs control samples\" )"},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"recording-decisions","dir":"Articles","previous_headings":"","what":"Recording Decisions","title":"Tracking Human Decisions in Analysis","text":"progress analysis, record key decisions observations:","code":"# Record a quality control decision record_decision(   file_path = decision_file,   check = \"Sample-wise PCA clustering\",   observation = \"Treatment samples cluster together except for sample T3\",   decision = \"Exclude sample T3\",   reasoning = \"T3 clusters with controls, likely sample swap\",   evidence = \"plots/PCA_pre_filtering.pdf\" )  # Record a biological validation step record_decision(   file_path = decision_file,   check = \"Known pathway markers\",   observation = \"Expected stress response genes upregulated\",   decision = \"Results biologically plausible\",   reasoning = \"Key marker genes show expected direction of change\",   evidence = \"tables/marker_genes_expression.csv\" )"},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"generating-methods-documentation","dir":"Articles","previous_headings":"","what":"Generating Methods Documentation","title":"Tracking Human Decisions in Analysis","text":"can automatically generate methods section decision tree:","code":"# Generate methods section methods_text <- generate_methods_section(decision_file) cat(methods_text)"},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"exporting-decision-trees","dir":"Articles","previous_headings":"","what":"Exporting Decision Trees","title":"Tracking Human Decisions in Analysis","text":"Export decision tree various formats sharing documentation:","code":"# Export to markdown export_decision_tree(decision_file, format = \"md\")  # Export to HTML (requires rmarkdown) if (requireNamespace(\"rmarkdown\", quietly = TRUE)) {   export_decision_tree(decision_file, format = \"html\") }"},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"integration-with-project-workflow","dir":"Articles","previous_headings":"","what":"Integration with Project Workflow","title":"Tracking Human Decisions in Analysis","text":"decision tracking functionality integrates seamlessly analysis workflow: Initialize decision tree start analysis Record decisions make Use exported documentation methods sections papers Keep decision tree version control","code":""},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Tracking Human Decisions in Analysis","text":"recommended practices using decision tracking functionality: Consistent: Record decisions make , fact Specific: Include clear observations reasoning Link Evidence: Always link supporting plots, tables, evidence Version Control: Keep decision trees version control Review: Regularly review decisions team members","code":""},{"path":"https://sebrauschert.github.io/toth/articles/decision-tracking.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Tracking Human Decisions in Analysis","text":"tracking analytical decisions structured way, can: Make analysis process transparent Facilitate knowledge transfer within teams Improve reproducibility Generate better documentation decision tracking functionality toth helps make human expertise trackable code, breaking free “90% automation trap” crucial human judgment remains hidden.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"introduction-to-docker-with-r","dir":"Articles","previous_headings":"","what":"Introduction to Docker with R","title":"Docker Setup","text":"Docker provides way package R environment, dependencies, code reproducible container. toth automatically sets Docker configuration includes R, RStudio Server, necessary tools reproducible analytics.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"understanding-the-default-setup","dir":"Articles","previous_headings":"","what":"Understanding the Default Setup","title":"Docker Setup","text":"create new project toth, generates two key Docker files:","code":""},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"dockerfile","dir":"Articles","previous_headings":"Understanding the Default Setup","what":"Dockerfile","title":"Docker Setup","text":"","code":"FROM rocker/verse:latest  # Install system dependencies RUN apt-get update && apt-get install -y \\     python3-pip \\     && rm -rf /var/lib/apt/lists/*  # Install DVC RUN pip3 install dvc  # Create working directory WORKDIR /project  # Copy project files COPY . /project/  # Install R packages RUN R -e 'renv::restore()'  # Command to keep the container running CMD [\"/bin/bash\"]"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"docker-compose-yml","dir":"Articles","previous_headings":"Understanding the Default Setup","what":"docker-compose.yml","title":"Docker Setup","text":"","code":"services:   rstudio:     build: .     ports:       - \"8787:8787\"     environment:       - PASSWORD=rstudio     volumes:       - .:/project"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"starting-the-environment","dir":"Articles","previous_headings":"Basic Usage","what":"Starting the Environment","title":"Docker Setup","text":"","code":"# Build and start the container docker compose up -d  # Access RStudio Server at http://localhost:8787 # Username: rstudio # Password: rstudio"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"stopping-the-environment","dir":"Articles","previous_headings":"Basic Usage","what":"Stopping the Environment","title":"Docker Setup","text":"","code":"docker compose down"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"adding-system-dependencies","dir":"Articles","previous_headings":"Customizing the Environment","what":"Adding System Dependencies","title":"Docker Setup","text":"Modify Dockerfile include additional system packages:","code":"RUN apt-get update && apt-get install -y \\     python3-pip \\     libgdal-dev \\     libproj-dev \\     && rm -rf /var/lib/apt/lists/*"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"adding-r-packages","dir":"Articles","previous_headings":"Customizing the Environment","what":"Adding R Packages","title":"Docker Setup","text":"Using renv (Recommended): Direct Installation (Dockerfile):","code":"# In R renv::install(\"package_name\") renv::snapshot() RUN R -e 'install.packages(\"package_name\")'"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"customizing-rstudio-settings","dir":"Articles","previous_headings":"Customizing the Environment","what":"Customizing RStudio Settings","title":"Docker Setup","text":"Add custom RStudio preferences:","code":"COPY rstudio-prefs.json /home/rstudio/.config/rstudio/rstudio-prefs.json"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"environment-variables","dir":"Articles","previous_headings":"Advanced Configuration","what":"Environment Variables","title":"Docker Setup","text":"Use .env file configuration: Update docker-compose.yml:","code":"# .env POSTGRES_PASSWORD=secret AWS_ACCESS_KEY_ID=your_key AWS_SECRET_ACCESS_KEY=your_secret services:   rstudio:     env_file:       - .env"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"adding-services","dir":"Articles","previous_headings":"Advanced Configuration","what":"Adding Services","title":"Docker Setup","text":"Extend docker-compose.yml include additional services:","code":"services:   rstudio:     # ... existing config ...      postgres:     image: postgres:latest     environment:       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}     volumes:       - postgres_data:/var/lib/postgresql/data  volumes:   postgres_data:"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Docker Setup","text":"Never commit sensitive information Dockerfile Use .env files secrets (add .gitignore) Regularly update base images Use .dockerignore exclude unnecessary files Layer Dockerfile efficiently Consider multi-stage builds complex setups Use volumes development Set proper user permissions Configure Git ignore Docker-specific files","code":""},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Docker Setup","text":"Common issues solutions: Permission Issues Port Conflicts Memory Issues","code":"# Fix file ownership sudo chown -R 1000:1000 . # Change port mapping in docker-compose.yml ports:   - \"8788:8787\"  # Use different host port services:   rstudio:     mem_limit: 4g     mem_reservation: 2g"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"integration-with-toth","dir":"Articles","previous_headings":"","what":"Integration with toth","title":"Docker Setup","text":"toth provides convenient setup configuration:","code":"library(toth)  # Create project with Docker support create_analytics_project(   \"my_project\",   use_docker = TRUE )  # This sets up: # - Dockerfile with R and system dependencies # - docker-compose.yml for easy orchestration # - .dockerignore for proper file exclusion # - Default RStudio configuration"},{"path":"https://sebrauschert.github.io/toth/articles/docker-setup.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Docker Setup","text":"Explore Docker’s official documentation Learn Docker Compose features Set continuous integration Docker Create custom base images needs","code":""},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Version Control with toth","text":"Data Version Control (DVC) powerful tool managing data science workflows. DVC written Python, toth provides seamless integration R, allowing : Track large data files without storing Git Create reproducible pipelines Track metrics plots Share data across team members guide walk setting DVC using effectively toth.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Data Version Control with toth","text":"starting, ensure : DVC installed: Git initialized project: toth installed:","code":"pip install dvc git init remotes::install_github(\"sebrauschert/toth\")"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"project-setup","dir":"Articles","previous_headings":"","what":"Project Setup","title":"Data Version Control with toth","text":"create new analytics project toth, DVC automatically set : : - Initializes DVC - Creates data directories tracked DVC - Sets appropriate .gitignore rules - Creates basic DVC pipeline structure","code":"library(toth) create_analytics_project(   \"my_analysis\",   use_dvc = TRUE  # DVC is enabled by default )"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"tracking-csv-files","dir":"Articles","previous_headings":"Simple Data Tracking","what":"Tracking CSV Files","title":"Data Version Control with toth","text":"simplest way track data files using DVC-aware write functions:","code":"# Track a CSV file data |> write_csv_dvc(   \"data/processed/results.csv\",   message = \"Add processed results\" )  # Track with additional readr::write_csv parameters data |> write_csv_dvc(   \"data/processed/results.csv\",   message = \"Add processed results\",   na = \"NA\",   quote = \"needed\" )"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"tracking-r-objects","dir":"Articles","previous_headings":"Simple Data Tracking","what":"Tracking R Objects","title":"Data Version Control with toth","text":"R objects, use write_rds_dvc:","code":"# Save and track a model model |> write_rds_dvc(   \"models/rf_model.rds\",   message = \"Save trained random forest model\" )"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"manual-tracking","dir":"Articles","previous_headings":"Simple Data Tracking","what":"Manual Tracking","title":"Data Version Control with toth","text":"can also track files ’ve written:","code":"# Write file normally readr::write_csv(data, \"data/processed/results.csv\")  # Track with DVC dvc_track(\"data/processed/results.csv\", \"Add processed results\")"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"creating-dvc-pipelines","dir":"Articles","previous_headings":"","what":"Creating DVC Pipelines","title":"Data Version Control with toth","text":"DVC pipelines help make analysis reproducible tracking: - Input dependencies - Output files - Parameters - Metrics plots","code":""},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"basic-pipeline-stage","dir":"Articles","previous_headings":"Creating DVC Pipelines","what":"Basic Pipeline Stage","title":"Data Version Control with toth","text":"","code":"# Create a data processing stage data |> write_csv_dvc(   \"data/processed/results.csv\",   stage_name = \"process_data\",   deps = \"data/raw/input.csv\",   params = list(threshold = 0.5) )"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"tracking-metrics","dir":"Articles","previous_headings":"Creating DVC Pipelines","what":"Tracking Metrics","title":"Data Version Control with toth","text":"Track evaluation metrics automatically:","code":"metrics |> write_csv_dvc(   \"metrics/evaluation.csv\",   stage_name = \"evaluate_model\",   deps = c(\"models/rf_model.rds\", \"data/test/test.csv\"),   metrics = TRUE  # Mark as DVC metrics )"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"tracking-plots","dir":"Articles","previous_headings":"Creating DVC Pipelines","what":"Tracking Plots","title":"Data Version Control with toth","text":"Track visualization files:","code":"# Save plot data with DVC tracking plot_data |> write_csv_dvc(   \"plots/feature_importance.csv\",   stage_name = \"create_plots\",   deps = \"models/rf_model.rds\",   plots = TRUE  # Mark as DVC plot )"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"complete-pipeline-example","dir":"Articles","previous_headings":"","what":"Complete Pipeline Example","title":"Data Version Control with toth","text":"’s complete example machine learning pipeline:","code":"library(toth)  # 1. Data Preprocessing raw_data |> write_csv_dvc(   \"data/processed/preprocessed.csv\",   stage_name = \"preprocess\",   deps = \"data/raw/input.csv\",   params = list(     remove_na = TRUE,     normalize = TRUE   ) )  # 2. Feature Engineering features |> write_csv_dvc(   \"data/processed/features.csv\",   stage_name = \"feature_engineering\",   deps = \"data/processed/preprocessed.csv\",   params = list(     n_components = 10   ) )  # 3. Model Training model |> write_rds_dvc(   \"models/rf_model.rds\",   stage_name = \"train_model\",   deps = \"data/processed/features.csv\",   params = list(     ntree = 500,     mtry = 3   ) )  # 4. Model Evaluation metrics |> write_csv_dvc(   \"metrics/evaluation.csv\",   stage_name = \"evaluate\",   deps = c(     \"models/rf_model.rds\",     \"data/processed/features.csv\"   ),   metrics = TRUE )  # 5. Create Plots plot_data |> write_csv_dvc(   \"plots/performance.csv\",   stage_name = \"visualize\",   deps = \"metrics/evaluation.csv\",   plots = TRUE )"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"working-with-remote-storage","dir":"Articles","previous_headings":"","what":"Working with Remote Storage","title":"Data Version Control with toth","text":"DVC supports various remote storage options (S3, GCS, etc.). configured, can:","code":"# Pull data from remote dvc_pull()  # Push data to remote dvc_push()  # Pull specific files dvc_pull(\"data/processed/features.csv\")"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Data Version Control with toth","text":"Keep raw data data/raw/ Store processed data data/processed/ Save models models/ Keep metrics metrics/ Store plots plots/ Make stage names descriptive Use consistent naming conventions Include purpose name Always specify input dependencies Include R scripts dependencies Track configuration files Track important hyperparameters Include preprocessing parameters Document parameter choices Commit .dvc files Git Use meaningful commit messages Push data remote storage","code":""},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Data Version Control with toth","text":"Common issues solutions: DVC initialized: File tracked: Pipeline updating:","code":"# Initialize DVC manually system2(\"dvc\", \"init\") # Check if file is tracked system2(\"dvc\", c(\"status\", \"path/to/file\")) # Force pipeline stage rerun system2(\"dvc\", c(\"repro\", \"--force\"))"},{"path":"https://sebrauschert.github.io/toth/articles/dvc-tracking.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Data Version Control with toth","text":"DVC integration toth provides seamless way : - Track large data files - Create reproducible pipelines - Share data across team members - Monitor experiments - Maintain data science workflows following practices, can create reproducible analyses easy share collaborate .","code":""},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with toth","text":"toth comprehensive framework setting reproducible analytics projects R. integrates several best practices tools: Data version control DVC (R functions) Containerization Docker Dependency management renv Customizable reporting Quarto guide help get started basic features toth.","code":""},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with toth","text":"can install development version toth GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"sebrauschert/toth\")"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"prerequisites","dir":"Articles","previous_headings":"Installation","what":"Prerequisites","title":"Getting Started with toth","text":"using toth, ensure : DVC installed Docker installed R (>= 4.1.0) Quarto report generation","code":""},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"creating-a-new-project","dir":"Articles","previous_headings":"","what":"Creating a New Project","title":"Getting Started with toth","text":"Create new analytics project necessary setup: sets standardized project structure:","code":"library(toth) library(tidyverse)  # Create a new project with all features enabled create_analytics_project(   \"my_project\",   use_dvc = TRUE,   use_docker = TRUE,   use_quarto = TRUE ) my_project/ ├── .dvc/               # DVC configuration ├── .git/               # Git version control ├── .gitignore         # Git ignore patterns ├── .Rproj.user/      # RStudio project files ├── data/              │   ├── raw/          # Raw data (tracked by DVC) │   └── processed/    # Processed data (tracked by DVC) ├── R/                # R scripts ├── reports/          # Quarto reports ├── docker/           # Dockerfile and related files ├── renv/             # renv library and lockfile └── README.md         # Project documentation"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"data-version-control-with-toth","dir":"Articles","previous_headings":"","what":"Data Version Control with toth","title":"Getting Started with toth","text":"toth provides seamless integration DVC tidyverse-style functions. ’s use data science workflow:","code":""},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"reading-and-processing-data","dir":"Articles","previous_headings":"Data Version Control with toth","what":"Reading and Processing Data","title":"Getting Started with toth","text":"","code":"# Example data processing pipeline raw_data <- read_csv(\"data/raw/dataset.csv\")  processed_data <- raw_data |>   mutate(     date = as.Date(date),     value = as.numeric(value)   ) |>   filter(!is.na(value)) |>   # Save processed data with DVC tracking   write_csv_dvc(     \"data/processed/cleaned_data.csv\",     \"Cleaned and processed raw data\"   )  # Continue with analysis summary_stats <- processed_data |>   group_by(category) |>   summarise(     mean_value = mean(value),     sd_value = sd(value)   ) |>   # Save summary statistics with DVC tracking   write_csv_dvc(     \"data/processed/summary_stats.csv\",     \"Generated summary statistics\"   )"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"tracking-models-and-r-objects","dir":"Articles","previous_headings":"Data Version Control with toth","what":"Tracking Models and R Objects","title":"Getting Started with toth","text":"","code":"# Train a model model <- lm(value ~ date + category, data = processed_data)  # Save model with DVC tracking model |>   write_rds_dvc(     \"models/linear_model.rds\",     \"Trained linear regression model\"   )  # Make predictions and save results predictions <- model |>   predict(newdata = new_data) |>   as_tibble() |>   write_csv_dvc(     \"results/model_predictions.csv\",     \"Generated model predictions\"   )"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"best-practices-for-data-organization","dir":"Articles","previous_headings":"Data Version Control with toth","what":"Best Practices for Data Organization","title":"Getting Started with toth","text":"","code":"# Raw data pipeline raw_survey_data |>   write_csv_dvc(     \"data/raw/survey_2024.csv\",     \"Added raw survey data for 2024\"   )  # Processed data pipeline cleaned_survey_data |>   write_csv_dvc(     \"data/processed/survey_2024_clean.csv\",     \"Added cleaned survey data\"   ) |>   create_features() |>   write_csv_dvc(     \"data/processed/survey_2024_features.csv\",     \"Added feature engineered dataset\"   )  # Model pipeline final_model |>   write_rds_dvc(     \"models/survey_2024_model.rds\",     \"Final predictive model with accuracy: 0.92\"   )"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"docker-integration","dir":"Articles","previous_headings":"","what":"Docker Integration","title":"Getting Started with toth","text":"toth sets Docker environment R, RStudio Server, necessary tools: Docker setup includes: - R RStudio Server - DVC data version control - system dependencies - Automatic package installation via renv","code":"# Build and start the container docker compose up -d  # Access RStudio Server at http://localhost:8787 # Username: rstudio # Password: rstudio"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"dependency-management","dir":"Articles","previous_headings":"","what":"Dependency Management","title":"Getting Started with toth","text":"toth uses renv dependency management:","code":"# Install a new package renv::install(\"tidymodels\")  # Update lockfile renv::snapshot()  # Restore project environment renv::restore()"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"quarto-reports","dir":"Articles","previous_headings":"","what":"Quarto Reports","title":"Getting Started with toth","text":"Create beautiful reports custom templates:","code":"# Create a new template create_quarto_template(   \"company_template\",   primary_color = \"#0054AD\",   secondary_color = \"#00B4E0\",   logo_path = \"path/to/logo.png\" )  # Apply template to a report apply_template_to_report(   \"reports/analysis.qmd\",   \"company_template\" )"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Getting Started with toth","text":"Data Organization Error Handling Documentation Document analysis steps reports Keep README.md date Add comments complex code Use descriptive commit messages Reproducibility Use Docker environment consistency Track dependencies renv Version control everything Write automated tests","code":"# Keep raw data separate raw_data |>   write_csv_dvc(     \"data/raw/experiment_data.csv\",     \"Raw experimental data\"   )  # Store processed data with clear naming processed_data |>   write_csv_dvc(     \"data/processed/experiment_cleaned.csv\",     \"Cleaned experimental data\"   )  # Save models with version info model |>   write_rds_dvc(     \"models/xgboost_v2.rds\",     \"XGBoost model v2 (accuracy: 0.92)\"   ) # Safe writing function safe_write <- function(data, path, message) {   tryCatch(     write_csv_dvc(data, path, message),     error = function(e) {       warning(\"Failed to save data: \", e$message)       NULL     }   ) }  # Using purrr::safely safe_write_dvc <- safely(write_csv_dvc) result <- safe_write_dvc(data, \"data/output.csv\", \"Saved output\")"},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started with toth","text":"Read DVC Integration Guide advanced usage Learn Docker Setup customizing environment Explore Custom Templates report styling Check function reference detailed documentation","code":""},{"path":"https://sebrauschert.github.io/toth/articles/getting-started.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Getting Started with toth","text":"encounter issues questions: Check package documentation File issues GitHub Read function documentation ?function_name","code":""},{"path":"https://sebrauschert.github.io/toth/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Rauschert. Author, maintainer.","code":""},{"path":"https://sebrauschert.github.io/toth/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rauschert S (2025). toth: Reproducible Analytics Framework Data Version Control. R package version 0.0.0.9000, https://sebrauschert.github.io/toth/, https://github.com/sebrauschert/toth.","code":"@Manual{,   title = {toth: Reproducible Analytics Framework with Data Version Control},   author = {Sebastian Rauschert},   year = {2025},   note = {R package version 0.0.0.9000,     https://sebrauschert.github.io/toth/},   url = {https://github.com/sebrauschert/toth}, }"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Reproducible Analytics Framework with Data Version Control","text":"toth R package provides comprehensive framework setting reproducible analytics projects. integrates best practices : Project organization structure Data version control DVC Containerization Docker Dependency management renv Customizable reporting Quarto package still active development used caution.","code":""},{"path":"https://sebrauschert.github.io/toth/index.html","id":"why-toth","dir":"","previous_headings":"","what":"Why Toth?","title":"Reproducible Analytics Framework with Data Version Control","text":"toth, named ancient Egyptian deity wisdom writing, embodies essence preserving documenting knowledge. Just Toth revered recording deeds living maintaining cosmic order, R package ensures analytical integrity comprehensive version control code, data analytical decisions. seamlessly integrating DVC, Git, Docker, Toth aims create robust framework reproducible analytics, making effortless track data lineage, manage dependencies, share reproducible environments. Whether ’re collaborating team project maintaining consistency solo analyses, toth serves faithful scribe, ensuring every step analytical journey documented, reproducible, trustworthy.","code":""},{"path":"https://sebrauschert.github.io/toth/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Reproducible Analytics Framework with Data Version Control","text":"can install development version toth GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"sebrauschert/toth\")"},{"path":"https://sebrauschert.github.io/toth/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Reproducible Analytics Framework with Data Version Control","text":"using toth, ensure : DVC installed Docker installed R (>= 4.1.0) Quarto report generation","code":""},{"path":"https://sebrauschert.github.io/toth/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Reproducible Analytics Framework with Data Version Control","text":"📁 Standardized project structure 🔄 Data version control setup DVC 🐳 Docker integration reproducible environments 📦 Dependency management renv 📊 Customizable Quarto reporting templates 🔧 Best practice workflows analytics projects","code":""},{"path":[]},{"path":"https://sebrauschert.github.io/toth/index.html","id":"basic-project-setup","dir":"","previous_headings":"Usage","what":"Basic Project Setup","title":"Reproducible Analytics Framework with Data Version Control","text":"","code":"library(toth)  # Create a new analytics project create_analytics_project(\"my_project\")"},{"path":"https://sebrauschert.github.io/toth/index.html","id":"dvc-data-tracking","dir":"","previous_headings":"Usage","what":"DVC Data Tracking","title":"Reproducible Analytics Framework with Data Version Control","text":"","code":"# Track data files with DVC data |>   write_csv_dvc(\"data/processed/mydata.csv\", \"Updated processed data\")  # Track R objects model |>   write_rds_dvc(\"models/model.rds\", \"Saved trained model\")"},{"path":"https://sebrauschert.github.io/toth/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Reproducible Analytics Framework with Data Version Control","text":"Package website Getting Started Guide DVC Guide Docker Setup Custom Templates","code":""},{"path":"https://sebrauschert.github.io/toth/index.html","id":"project-structure","dir":"","previous_headings":"","what":"Project Structure","title":"Reproducible Analytics Framework with Data Version Control","text":"create new analytics project toth, sets following structure:","code":"my_project/ ├── .dvc/               # DVC configuration ├── .git/               # Git version control ├── .gitignore         # Git ignore patterns ├── .Rproj.user/      # RStudio project files ├── data/ │   ├── raw/          # Raw data (tracked by DVC) │   └── processed/    # Processed data (tracked by DVC) ├── R/                # R scripts ├── reports/          # Quarto reports ├── docker/           # Dockerfile and related files ├── renv/             # renv library and lockfile └── README.md         # Project documentation"},{"path":"https://sebrauschert.github.io/toth/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Reproducible Analytics Framework with Data Version Control","text":"Please see CONTRIBUTING.md guidelines contribute package.","code":""},{"path":"https://sebrauschert.github.io/toth/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Reproducible Analytics Framework with Data Version Control","text":"MIT Toth icon Freepik","code":""},{"path":"https://sebrauschert.github.io/toth/reference/apply_template_to_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Template to Report — apply_template_to_report","title":"Apply Template to Report — apply_template_to_report","text":"Applies custom template Quarto report","code":""},{"path":"https://sebrauschert.github.io/toth/reference/apply_template_to_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Template to Report — apply_template_to_report","text":"","code":"apply_template_to_report(report_path, template_name)"},{"path":"https://sebrauschert.github.io/toth/reference/apply_template_to_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Template to Report — apply_template_to_report","text":"report_path Character. Path Quarto report template_name Character. Name template apply","code":""},{"path":"https://sebrauschert.github.io/toth/reference/apply_template_to_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Template to Report — apply_template_to_report","text":"Invisibly returns TRUE success","code":""},{"path":"https://sebrauschert.github.io/toth/reference/apply_template_to_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Template to Report — apply_template_to_report","text":"","code":"if (FALSE) { # \\dontrun{ apply_template_to_report(\"reports/analysis.qmd\", \"company_template\") } # }"},{"path":"https://sebrauschert.github.io/toth/reference/check_system_requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Check System Requirements — check_system_requirements","title":"Check System Requirements — check_system_requirements","text":"Check System Requirements","code":""},{"path":"https://sebrauschert.github.io/toth/reference/check_system_requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check System Requirements — check_system_requirements","text":"","code":"check_system_requirements(use_dvc, use_docker)"},{"path":"https://sebrauschert.github.io/toth/reference/check_system_requirements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check System Requirements — check_system_requirements","text":"use_dvc Logical. Whether DVC required use_docker Logical. Whether Docker required","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_analytics_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New Analytics Project — create_analytics_project","title":"Create a New Analytics Project — create_analytics_project","text":"Sets new analytics project standardized structure configuration reproducible analysis using DVC, Docker, renv, Quarto.","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_analytics_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New Analytics Project — create_analytics_project","text":"","code":"create_analytics_project(   path,   use_dvc = TRUE,   use_docker = TRUE,   use_renv = TRUE,   git_init = TRUE )"},{"path":"https://sebrauschert.github.io/toth/reference/create_analytics_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New Analytics Project — create_analytics_project","text":"path Character. path project created. use_dvc Logical. Whether initialize DVC. Default TRUE. use_docker Logical. Whether set Docker configuration. Default TRUE. use_renv Logical. Whether initialize renv. Default TRUE. git_init Logical. Whether initialize git repository. Default TRUE.","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_analytics_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New Analytics Project — create_analytics_project","text":"Invisibly returns path created project.","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_analytics_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a New Analytics Project — create_analytics_project","text":"","code":"if (FALSE) { # \\dontrun{ create_analytics_project(\"my_analysis\") } # }"},{"path":"https://sebrauschert.github.io/toth/reference/create_custom_css.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Custom CSS for Quarto Template — create_custom_css","title":"Create Custom CSS for Quarto Template — create_custom_css","text":"Create Custom CSS Quarto Template","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_custom_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Custom CSS for Quarto Template — create_custom_css","text":"","code":"create_custom_css(   primary_color = NULL,   secondary_color = NULL,   font_family = NULL )"},{"path":"https://sebrauschert.github.io/toth/reference/create_quarto_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Custom Quarto Template — create_quarto_template","title":"Create Custom Quarto Template — create_quarto_template","text":"Creates custom Quarto template specified branding options","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_quarto_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Custom Quarto Template — create_quarto_template","text":"","code":"create_quarto_template(   template_name,   logo_path = NULL,   primary_color = NULL,   secondary_color = NULL,   font_family = NULL,   output_dir = \"reports/templates\" )"},{"path":"https://sebrauschert.github.io/toth/reference/create_quarto_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Custom Quarto Template — create_quarto_template","text":"template_name Character. Name template logo_path Character. Path logo file (optional) primary_color Character. Primary brand color hex format (optional) secondary_color Character. Secondary brand color hex format (optional) font_family Character. Main font family use (optional) output_dir Character. Directory save template (optional)","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_quarto_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Custom Quarto Template — create_quarto_template","text":"Invisibly returns path created template","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_quarto_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Custom Quarto Template — create_quarto_template","text":"","code":"if (FALSE) { # \\dontrun{ create_quarto_template(   template_name = \"company_template\",   logo_path = \"path/to/logo.png\",   primary_color = \"#FF0000\" ) } # }"},{"path":"https://sebrauschert.github.io/toth/reference/create_template_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Template YAML Configuration — create_template_yaml","title":"Create Template YAML Configuration — create_template_yaml","text":"Create Template YAML Configuration","code":""},{"path":"https://sebrauschert.github.io/toth/reference/create_template_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Template YAML Configuration — create_template_yaml","text":"","code":"create_template_yaml(template_name, logo_path = NULL)"},{"path":"https://sebrauschert.github.io/toth/reference/decision_tracking.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision Tracking Functions — decision_tracking","title":"Decision Tracking Functions — decision_tracking","text":"Functions tracking documenting human decisions analyses","code":""},{"path":"https://sebrauschert.github.io/toth/reference/dvc_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Track files with DVC after writing — dvc_track","title":"Track files with DVC after writing — dvc_track","text":"function adds DVC tracking files written using tidyverse write functions. designed used pipe chain write operations.","code":""},{"path":"https://sebrauschert.github.io/toth/reference/dvc_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track files with DVC after writing — dvc_track","text":"","code":"dvc_track(path, message = NULL)"},{"path":"https://sebrauschert.github.io/toth/reference/dvc_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track files with DVC after writing — dvc_track","text":"path path file written message optional commit message DVC","code":""},{"path":"https://sebrauschert.github.io/toth/reference/dvc_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Track files with DVC after writing — dvc_track","text":"input path (invisibly) allow piping","code":""},{"path":"https://sebrauschert.github.io/toth/reference/dvc_track.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Track files with DVC after writing — dvc_track","text":"","code":"if (FALSE) { # \\dontrun{ data |>   write_csv(\"data/processed/mydata.csv\") |>   dvc_track(\"Updated processed data\") } # }"},{"path":"https://sebrauschert.github.io/toth/reference/example_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Analytics Project Data — example_projects","title":"Example Analytics Project Data — example_projects","text":"dataset containing example analytics project metrics demonstration purposes. dataset includes project characteristics performance metrics.","code":""},{"path":"https://sebrauschert.github.io/toth/reference/example_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Analytics Project Data — example_projects","text":"","code":"example_projects"},{"path":"https://sebrauschert.github.io/toth/reference/example_projects.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Analytics Project Data — example_projects","text":"data frame 100 rows 6 variables: project_id Unique identifier project start_date Project start date team_size Number team members uses_dvc Whether project uses DVC (logical) uses_docker Whether project uses Docker (logical) completion_rate Project completion rate (0-100)","code":""},{"path":"https://sebrauschert.github.io/toth/reference/example_projects.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Analytics Project Data — example_projects","text":"Generated demonstration purposes","code":""},{"path":"https://sebrauschert.github.io/toth/reference/export_decision_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Decision Tree to Various Formats — export_decision_tree","title":"Export Decision Tree to Various Formats — export_decision_tree","text":"Export Decision Tree Various Formats","code":""},{"path":"https://sebrauschert.github.io/toth/reference/export_decision_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Decision Tree to Various Formats — export_decision_tree","text":"","code":"export_decision_tree(file_path, format = \"md\", output_path = NULL)"},{"path":"https://sebrauschert.github.io/toth/reference/export_decision_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Decision Tree to Various Formats — export_decision_tree","text":"file_path Path decision tree YAML file format Output format (\"html\", \"pdf\", \"md\") output_path Path save output file","code":""},{"path":"https://sebrauschert.github.io/toth/reference/export_decision_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Decision Tree to Various Formats — export_decision_tree","text":"Invisibly returns path exported file","code":""},{"path":"https://sebrauschert.github.io/toth/reference/generate_methods_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Methods Section from Decision Tree — generate_methods_section","title":"Generate Methods Section from Decision Tree — generate_methods_section","text":"Generate Methods Section Decision Tree","code":""},{"path":"https://sebrauschert.github.io/toth/reference/generate_methods_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Methods Section from Decision Tree — generate_methods_section","text":"","code":"generate_methods_section(file_path, format = \"markdown\")"},{"path":"https://sebrauschert.github.io/toth/reference/generate_methods_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Methods Section from Decision Tree — generate_methods_section","text":"file_path Path decision tree YAML file format Output format (\"markdown\" \"text\")","code":""},{"path":"https://sebrauschert.github.io/toth/reference/generate_methods_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Methods Section from Decision Tree — generate_methods_section","text":"Character string containing methods section","code":""},{"path":"https://sebrauschert.github.io/toth/reference/initialize_decision_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a Decision Tree — initialize_decision_tree","title":"Initialize a Decision Tree — initialize_decision_tree","text":"Initialize Decision Tree","code":""},{"path":"https://sebrauschert.github.io/toth/reference/initialize_decision_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a Decision Tree — initialize_decision_tree","text":"","code":"initialize_decision_tree(analysis_id, analyst, description, path = \"decisions\")"},{"path":"https://sebrauschert.github.io/toth/reference/initialize_decision_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a Decision Tree — initialize_decision_tree","text":"analysis_id Character string identifying analysis analyst Character string analyst name description Character string describing analysis path Character string specifying save decision tree","code":""},{"path":"https://sebrauschert.github.io/toth/reference/initialize_decision_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a Decision Tree — initialize_decision_tree","text":"Invisibly returns path created decision tree file","code":""},{"path":"https://sebrauschert.github.io/toth/reference/record_decision.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a Decision — record_decision","title":"Record a Decision — record_decision","text":"Record Decision","code":""},{"path":"https://sebrauschert.github.io/toth/reference/record_decision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a Decision — record_decision","text":"","code":"record_decision(   file_path,   check,   observation,   decision,   reasoning,   evidence = NULL )"},{"path":"https://sebrauschert.github.io/toth/reference/record_decision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a Decision — record_decision","text":"file_path Path decision tree YAML file check Character string describing checked observation Character string describing observed decision Character string describing decision made reasoning Character string explaining reasoning evidence Character string pointing supporting evidence (e.g., plot path)","code":""},{"path":"https://sebrauschert.github.io/toth/reference/record_decision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a Decision — record_decision","text":"Invisibly returns updated decision tree","code":""},{"path":"https://sebrauschert.github.io/toth/reference/setup_docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Docker Configuration — setup_docker","title":"Set up Docker Configuration — setup_docker","text":"Set Docker Configuration","code":""},{"path":"https://sebrauschert.github.io/toth/reference/setup_docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Docker Configuration — setup_docker","text":"","code":"setup_docker()"},{"path":"https://sebrauschert.github.io/toth/reference/setup_dvc_tracking.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up DVC Tracking — setup_dvc_tracking","title":"Set up DVC Tracking — setup_dvc_tracking","text":"Set DVC Tracking","code":""},{"path":"https://sebrauschert.github.io/toth/reference/setup_dvc_tracking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up DVC Tracking — setup_dvc_tracking","text":"","code":"setup_dvc_tracking()"},{"path":"https://sebrauschert.github.io/toth/reference/setup_quarto_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Quarto Template — setup_quarto_template","title":"Set up Quarto Template — setup_quarto_template","text":"Set Quarto Template","code":""},{"path":"https://sebrauschert.github.io/toth/reference/setup_quarto_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Quarto Template — setup_quarto_template","text":"","code":"setup_quarto_template()"},{"path":"https://sebrauschert.github.io/toth/reference/toth-package.html","id":null,"dir":"Reference","previous_headings":"","what":"toth: Reproducible Analytics Framework with Data Version Control — toth-package","title":"toth: Reproducible Analytics Framework with Data Version Control — toth-package","text":"comprehensive framework setting reproducible analytics projects integrated version control data using 'DVC' (Data Version Control), containerization using 'Docker', dependency management using 'renv', customizable reporting using 'Quarto'.","code":""},{"path":"https://sebrauschert.github.io/toth/reference/toth-package.html","id":"key-features","dir":"Reference","previous_headings":"","what":"Key Features","title":"toth: Reproducible Analytics Framework with Data Version Control — toth-package","text":"Project organization structure Data version control DVC Containerization Docker Dependency management renv Customizable reporting Quarto","code":""},{"path":"https://sebrauschert.github.io/toth/reference/toth-package.html","id":"main-functions","dir":"Reference","previous_headings":"","what":"Main Functions","title":"toth: Reproducible Analytics Framework with Data Version Control — toth-package","text":"create_analytics_project: Create new analytics project dvc_track: Track files DVC write_csv_dvc: Write track CSV files write_rds_dvc: Write track RDS files","code":""},{"path":[]},{"path":"https://sebrauschert.github.io/toth/reference/toth-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"toth: Reproducible Analytics Framework with Data Version Control — toth-package","text":"Maintainer: Sebastian Rauschert seb.rauschert@gmail.com","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_csv_dvc.html","id":null,"dir":"Reference","previous_headings":"","what":"Write CSV with DVC tracking — write_csv_dvc","title":"Write CSV with DVC tracking — write_csv_dvc","text":"wrapper around readr::write_csv automatically tracks output file DVC","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_csv_dvc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write CSV with DVC tracking — write_csv_dvc","text":"","code":"write_csv_dvc(x, file, message = NULL, ...)"},{"path":"https://sebrauschert.github.io/toth/reference/write_csv_dvc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write CSV with DVC tracking — write_csv_dvc","text":"x data frame write file Path write message Optional DVC commit message ... Additional arguments passed readr::write_csv","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_csv_dvc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write CSV with DVC tracking — write_csv_dvc","text":"input data frame (invisibly) allow piping","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_csv_dvc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write CSV with DVC tracking — write_csv_dvc","text":"","code":"if (FALSE) { # \\dontrun{ data |> write_csv_dvc(\"data/processed/mydata.csv\", \"Updated data\") } # }"},{"path":"https://sebrauschert.github.io/toth/reference/write_gitignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Default .gitignore File — write_gitignore","title":"Write Default .gitignore File — write_gitignore","text":"Write Default .gitignore File","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_gitignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Default .gitignore File — write_gitignore","text":"","code":"write_gitignore()"},{"path":"https://sebrauschert.github.io/toth/reference/write_rds_dvc.html","id":null,"dir":"Reference","previous_headings":"","what":"Write RDS with DVC tracking — write_rds_dvc","title":"Write RDS with DVC tracking — write_rds_dvc","text":"wrapper around saveRDS automatically tracks output file DVC","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_rds_dvc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write RDS with DVC tracking — write_rds_dvc","text":"","code":"write_rds_dvc(object, file, message = NULL, ...)"},{"path":"https://sebrauschert.github.io/toth/reference/write_rds_dvc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write RDS with DVC tracking — write_rds_dvc","text":"object Object save file Path write message Optional DVC commit message ... Additional arguments passed saveRDS","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_rds_dvc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write RDS with DVC tracking — write_rds_dvc","text":"input object (invisibly) allow piping","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_rds_dvc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write RDS with DVC tracking — write_rds_dvc","text":"","code":"if (FALSE) { # \\dontrun{ model |> write_rds_dvc(\"models/model.rds\", \"Updated model\") } # }"},{"path":"https://sebrauschert.github.io/toth/reference/write_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Project README — write_readme","title":"Write Project README — write_readme","text":"Write Project README","code":""},{"path":"https://sebrauschert.github.io/toth/reference/write_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Project README — write_readme","text":"","code":"write_readme(project_name)"},{"path":[]},{"path":"https://sebrauschert.github.io/toth/news/index.html","id":"new-features-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"New features","title":"toth 0.0.0.9000","text":"dvc_track() tracking files writing write_csv_dvc() writing tracking CSV files write_rds_dvc() writing tracking RDS files Added comprehensive test suite DVC tracking functions Added vignette demonstrating DVC tracking functionality","code":""},{"path":"https://sebrauschert.github.io/toth/news/index.html","id":"documentation-improvements-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Documentation improvements","title":"toth 0.0.0.9000","text":"Updated pkgdown site DVC tracking documentation Added examples DVC tracking functions Improved function documentation detailed descriptions","code":""},{"path":"https://sebrauschert.github.io/toth/news/index.html","id":"bug-fixes-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"toth 0.0.0.9000","text":"None (initial release)","code":""}]
